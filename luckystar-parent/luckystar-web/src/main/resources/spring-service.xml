<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns="http://www.springframework.org/schema/beans" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

<!-- 	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:dubbo.properties</value>
				<value>classpath:admin.properties</value>
			</list>
		</property>
	</bean> -->
	
    <context:component-scan base-package="org.luckystar.service"/>
<!-- 
	 <bean id="dsfDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url">
            <value>${dsf.url}</value>
        </property>
        <property name="username">
            <value>${dsf.username}</value>
        </property>
        <property name="password">
            <value>${dsf.password}</value>
        </property>
        <property name="initialSize">
            <value>${dsf.initialSize}</value>
        </property>
        <property name="minIdle">
            <value>${dsf.minIdle}</value>
        </property>
        <property name="maxActive">
            <value>${dsf.maxActive}</value>
        </property>
        <property name="maxWait">
            <value>${dsf.maxWait}</value>
        </property>
        <property name="timeBetweenEvictionRunsMillis">
            <value>${dsf.timeBetweenEvictionRunsMillis}</value>
        </property>
        <property name="minEvictableIdleTimeMillis">
            <value>${dsf.minEvictableIdleTimeMillis}</value>
        </property>
        <property name="validationQuery">
            <value>${dsf.validationQuery}</value>
        </property>
        <property name="testWhileIdle">
            <value>${dsf.testWhileIdle}</value>
        </property>
        <property name="testOnBorrow">
            <value>${dsf.testOnBorrow}</value>
        </property>
        <property name="testOnReturn">
            <value>${dsf.testOnReturn}</value>
        </property>     
        <property name="filters">
            <value>${dsf.filters}</value>
        </property>              
    </bean>	
    
	<bean id="dsfSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dsfDataSource" />
		<property name="mapperLocations" value="classpath:/mapper/*Mapper.xml" />	
	</bean>	 
	
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="dsfSqlSessionFactory"/>      
       <property name="basePackage" value="com.dmall.dsp.dao" />
    </bean>	
    
	<bean id="dsfTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dsfDataSource"></property>  
    </bean>   
    
	<tx:advice id="dsfTxAdvice" transaction-manager="dsfTransactionManager">
		<tx:attributes>
			<tx:method name="save*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="update*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="delete*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="execute*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="add*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="bind*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="unbind*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="generate*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="insert*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="distribute*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="run*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="do*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="calculate*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="clear*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="upload*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>	
	
	<aop:config>
		<aop:pointcut id="service" expression="execution(* com.dmall.dsp.service..*.* (..))" />
		<aop:advisor advice-ref="dsfTxAdvice" pointcut-ref="service" />	
	</aop:config>	
	
	<bean id="fileUtils" class="com.dmall.dsp.utils.FileUtils">  
        <property name="accessKey" value="${file.accessKey}"></property>  
        <property name="secretKey" value="${file.secretKey}"></property>
        <property name="bucketName" value="${file.bucketName}"></property>
        <property name="localPath" value="${file.localPath}"></property>
        <property name="S3Path" value="${file.S3Path}"></property>
    </bean>		 -->
</beans>
